# Nome da aplicação
spring.application.name=logistica-reversa-api

# Define a porta do servidor backend
server.port=8080

# ===================================================================
# ✨ ALTERAÇÃO AQUI: CONFIGURAÇÃO DO BANCO DE DADOS POSTGRESQL
# ===================================================================

# URL de conexão JDBC para o PostgreSQL
# Formato: jdbc:postgresql://<host>:<port>/<database_name>
spring.datasource.url=jdbc:postgresql://localhost:5432/logistica_db

# Usuário e senha do banco de dados
spring.datasource.username=postgres
spring.datasource.password=!info159456@ti

# --- Configurações do JPA e Hibernate ---

# Define o "dialeto" SQL que o Hibernate deve usar para se comunicar com o PostgreSQL.
# Isso garante que os comandos SQL gerados sejam compatíveis com o Postgres.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Estratégia de geração do schema do banco de dados.
# "update": O Hibernate tentará atualizar o schema do banco para corresponder às suas entidades (@Entity)
# toda vez que a aplicação iniciar. Ótimo para desenvolvimento.
spring.jpa.hibernate.ddl-auto=update

# Mostra o SQL gerado pelo Hibernate no console. Útil para debug.
spring.jpa.show-sql=true
google.maps.api.key=AIzaSyAOGet9QNyKUXYvI-SatabXA3ayxcu88Ys